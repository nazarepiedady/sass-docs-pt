Por exemplo, suponhamos que queres escrever um seletor que combina com o seletor externo *e* um seletor de elemento. Tu poderias escrever uma mistura como esta que usa a [função `selector.unify()`][`selector.unify()` function] para combinar `&` com um seletor do utilizador:

[`selector.unify()` function]: ../modules/selector#unify

<% example do %>
  @use "sass:selector";

  @mixin unify-parent($child) {
    @at-root #{selector.unify(&, $child)} {
      @content;
    }
  }

  .wrapper .field {
    @include unify-parent("input") {
      /* ... */
    }
    @include unify-parent("select") {
      /* ... */
    }
  }
  ===
  @use "sass:selector"

  @mixin unify-parent($child)
    @at-root #{selector.unify(&, $child)}
      @content



  .wrapper .field
    @include unify-parent("input")
      /* ... */

    @include unify-parent("select")
      /* ... */
  ===
  .wrapper input.field {
    /* ... */
  }

  .wrapper select.field {
    /* ... */
  }
<% end %>
